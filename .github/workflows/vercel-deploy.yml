# .github/workflows/vercel-deploy.yml
name: Vercel Deploy

on:
  pull_request_target: # Fork PR에서 Secrets 접근 가능
    types: [opened, synchronize, reopened]
    branches: [develop, main]
  push:
    branches: [develop, main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    # environment 제거 - 승인 없이 바로 배포

    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4
        with:
          # PR의 실제 코드를 체크아웃 (Fork의 코드)
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install

      - name: Build project
        run: pnpm build

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Deploy Project Artifacts to Vercel
        id: deploy
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            # Push to main/develop = production deploy
            vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }} > deployment-url.txt
          else
            # PR = preview deploy
            vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} > deployment-url.txt
          fi
          echo "deployment_url=$(cat deployment-url.txt)" >> $GITHUB_OUTPUT
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Comment deployment URL on PR
        if: github.event_name == 'pull_request_target'
        uses: actions/github-script@v7
        with:
          script: |
            const deploymentUrl = '${{ steps.deploy.outputs.deployment_url }}';
            const comment = `🚀 **배포 완료!**

            📋 **배포 정보:**
            - **프리뷰 URL:** ${deploymentUrl}
            - **커밋:** ${{ github.event.pull_request.head.sha }}
            - **브랜치:** ${{ github.event.pull_request.head.ref }}

            ✅ 배포가 성공적으로 완료되었습니다!`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
