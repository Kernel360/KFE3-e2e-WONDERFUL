# .github/workflows/sync-and-deploy.yml
name: Sync to Personal Repo and Deploy

on:
  # PR 생성/업데이트 시 프리뷰 배포
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'apps/web/**'

  # main/develop 브랜치에 push 시 프로덕션 배포
  push:
    branches: [main, develop]
    paths:
      - 'apps/web/**'

jobs:
  # PR 프리뷰 배포
  preview-deploy:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout team repo
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies & Build
        run: |
          pnpm install
          sh ./build.sh

      - name: Push to personal repo preview branch
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.SEUNG_GITHUB_KEY }}
        with:
          source-directory: output
          destination-github-username: miniseung
          destination-repository-name: KFE3-e2e-WONDERFUL
          target-branch: preview/pr-${{ github.event.pull_request.number }}
          user-email: ${{ secrets.SEUNG_ACCOUNT_EMAIL }}
          user-name: seungmin
          commit-message: '🧪 Preview Deploy from PR #${{ github.event.pull_request.number }}'

      - name: Wait for Vercel deployment
        run: sleep 30

      - name: Comment preview URL on PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.issue.number;
            const previewUrl = `https://kfe3-e2e-wonderful-git-preview-pr-${prNumber}-miniseung.vercel.app`;

            // 기존 봇 댓글 찾기
            const comments = await github.rest.issues.listComments({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            const botComment = comments.data.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Vercel Preview')
            );

            const commentBody = `## 🚀 Vercel Preview 배포 완료

            ✅ **배포 상태**: 성공  
            🔗 **미리보기 링크**: ${previewUrl}  
            📝 **브랜치**: \`preview/pr-${prNumber}\`  
            ⏰ **배포 시간**: ${new Date().toLocaleString('ko-KR')}

            > 변경사항이 반영되려면 1-2분 정도 소요될 수 있습니다.`;

            if (botComment) {
              // 기존 댓글 업데이트
              await github.rest.issues.updateComment({
                comment_id: botComment.id,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: commentBody
              });
            } else {
              // 새 댓글 생성
              await github.rest.issues.createComment({
                issue_number: prNumber,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: commentBody
              });
            }

  # main/develop 브랜치 동기화
  sync-production:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout team repo
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies & Build
        run: |
          pnpm install
          sh ./build.sh

      - name: Push to personal repo main branch
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.SEUNG_GITHUB_KEY }}
        with:
          source-directory: output
          destination-github-username: miniseung
          destination-repository-name: KFE3-e2e-WONDERFUL
          target-branch: main
          user-email: ${{ secrets.SEUNG_ACCOUNT_EMAIL }}
          user-name: seungmin
          commit-message: '🚀 Production Deploy from ${{ github.ref_name }} branch'
